#!/bin/bash

# nome da branch de origem e da feature
branch_to_find=$1
feature_name=$2

# verifica se a branch de origem e o nome da feature foram fornecidos
if [ -z "$branch_to_find" ] || [ -z "$feature_name" ]
then
    echo "Por favor, forneça a branch de origem e o nome da feature"
    exit 1
fi

# procura a branch de origem em todas as branches
branch_exists=$(git branch -a | grep $branch_to_find)

# verifica se a branch de origem foi encontrada
if [ -z "$branch_exists" ]
then
    echo "Nenhum branch com o nome $branch_to_find foi encontrado"
    exit 1
fi

# cria a nova branch usando os primeiros 7 caracteres do nome da branch de origem
git branch ${branch_to_find:0:7} $branch_to_find

# cria a feature sem acompanhar a branch original
git branch --no-track feature/$feature_name refs/heads/${branch_to_find:0:7}

# deleta a branch temporária
git branch -D ${branch_to_find:0:7}

# muda para a feature
git checkout feature/$feature_name

# push da feature para o repositório remoto
git push --porcelain --progress origin refs/heads/feature/$feature_name:refs/heads/feature/$feature_name

# define a branch remota como upstream
git branch --set-upstream-to=refs/remotes/origin/feature/$feature_name feature/$feature_name

echo "NAME_FEATURE=$feature_name"
echo "NAME_BRANCH=$branch_to_find"
echo "SHA_ORIGEM=$(git rev-parse --short $branch_to_find)"


