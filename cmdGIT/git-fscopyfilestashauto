#!/bin/bash

# nome do stash
stash_name=$1

# nome da branch de destino
dest_branch=$2

# diretório de destino no sistema de arquivos
dest_dir=$3

# array para armazenar os diretórios dos arquivos e os nomes dos arquivos
file_info=()

# check se o nome do stash, a branch de destino e o diretório de destino foram fornecidos
if [ -z "$stash_name" ] || [ -z "$dest_branch" ] || [ -z "$dest_dir" ]
then
    echo "Por favor, forneça o nome do stash, a branch de destino e o diretório de destino"
    exit 1
fi

# verifica o stash mais recente com o nome fornecido
stash_id=$(git stash list | grep $stash_name | head -n 1 | awk -F: '{print $1}')
if [ -z "$stash_id" ]
then
    echo "Nenhum stash com o nome $stash_name foi encontrado"
    exit 1
fi

# obtém a branch atual
current_branch=$(git rev-parse --abbrev-ref HEAD)

# obtém uma lista dos arquivos no stash
stash_files=$(git diff --name-only $stash_id)

# muda para a branch de destino
git checkout $dest_branch

# copia os arquivos para o diretório de destino e armazena seus diretórios e nomes de arquivos
for file in $stash_files
do
    if [ -f "$file" ]
    then
        # obtenha o diretório do arquivo e o nome do arquivo e adicione-os à array
        dir=$(dirname "$file")
        filename=$(basename "$file")
        file_info+=("$dir:$filename")
        
        cp "$file" "$dest_dir"
    fi
done

# volta para a branch original
git checkout $current_branch

# imprime os diretórios dos arquivos e os nomes dos arquivos
for info in "${file_info[@]}"
do
  dir=${info%:*}
  filename=${info#*:}
  
  echo "O arquivo $filename foi copiado do diretório: $dir"
  
  cp "$dest_dir/$filename" "$dir"
done
