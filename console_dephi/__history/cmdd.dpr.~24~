program cmdd;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  System.SysUtils,
  System.Console,
  System.Classes,
  System.StrUtils,
  System.RTTI,
  ucompile in 'ucompile.pas',
  ucapturedoscmd in 'ucapturedoscmd.pas';

var
  Command             : String;
  CommandParameters   : String;
  InputArray          : TArray<string>;
  DirectoryRepository : String;
begin
  Console.WriteLine('First parameter must be the repository directory. Ex: C:\Apdata_X64');
  Console.WriteLine('Digit "exit" or "break" to finalize application');
  Console.WriteLine('Digit "setdir" to set directory for repository');

  DirectoryRepository := ParamStr(0);

  try
    while True do
    begin
      Console.Write('>');
      InputArray := Console.ReadLine.Split([' ', sLineBreak]);

      if Length(InputArray) >= 1 then
        Command := InputArray[0].ToUpper
      else
        Command := String.Empty;

      if Length(InputArray) >= 2 then
        CommandParameters := InputArray[1].ToUpper
      else
        CommandParameters := String.Empty;

      case IndexStr(Command, ['EXIT', 'BREAK', 'CLEAR', 'CLS', 'MENU', 'SETDIR']) of
        0    : Exit;
        1    : Break;
        2..3 : Console.Clear;
        4    : MenuCompilex64;
        else
        begin
          if not (ExecuteConsoleOutput(Command, CommandParameters)) then
          begin
            Console.WriteColor('Command not executed', [TConsoleColor.Red]);
            Console.WriteLine();
          end;
        end;
      end;
    end;
  except
    on E: Exception do
      Console.WriteLine(E.ClassName + ': ' + E.Message);
  end;
end.
